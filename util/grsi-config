#!/usr/bin/env bash 

# use ${variable//search/replace} instead of sed
# shellcheck disable=SC2001
# environment variable not assigned
# shellcheck disable=SC2154
# check exit code directly, not $?
# shellcheck disable=SC2181

readlink="readlink"
if [ "$(uname)" = "AIX" ]; then
	readlink="echo"
fi

# work around readlink versions not having -f option
fullpath1=$($readlink "$0")
if [ "$?" -ne "0" ]; then
	fullpath1=$0
else
	if [ "${fullpath1##/}" = "$fullpath1" ] && [ "${fullpath1##~}" = "$fullpath1" ]; then
		# relative path, prepend directory where executable was found
		lpath=$(dirname "$0")
		fullpath1=$lpath/$fullpath1
	fi
fi

progdir=$(dirname "$fullpath1")
runningdir=$(pwd)
if [ "${progdir##/}" != "$progdir" ] || [ "${progdir##~}" != "$progdir" ]; then
	# absolute path
	fullpath=$progdir
else
	# relative path
	if [ "$progdir" != "." ]; then
		fullpath=$runningdir/$progdir
	else
		fullpath=$runningdir
	fi
fi

# work around readlink versions not having -f option
fullpath1=$(readlink "$fullpath")
if [ "$?" -ne "0" ]; then
	fullpath1=$fullpath
fi

libdir=$GRSISYS/lib
incdir=$GRSISYS/include

# lists of libraries, these are used to form the "-l<library name>" flags for the linker
grsilibs="TGRSIint TFormat TLoops TKinematics TSRIM TBetaDecay TCal TReaction TPeakFitting"
detlibs="TSuppressed TBgo TPulseAnalyzer GROOT TGRSIFit TNucleus"
grsimore="TRawFile TDataParser TGUI"

if [ "$(root-config --has-xml)" == "yes" ]
then XMLlib="-lXMLParser -lXMLIO"
else XMLlib=""
fi

if [[ $(root-config --cflags) == *"-std="* ]]
then
	cflags="-I$incdir"
else
	cflags="-std=c++14 -I$incdir"
fi

usage="\
	Usage: grsi-config [--version] [--incdir] [--cflags] [--libs] [--all-libs] [--<detector specific library>-libs/incdir/cflags] [--help]"

if test $# -eq 0; then
	echo "${usage}" 1>&2
	exit 1
fi

out=""

incdirout=no
cflagsout=no
libsout=no
alllibsout=no
rootout=no

while test $# -gt 0; do
	case $1 in
		--version)
			### Output the version number.  If GVersion.h can not be found, give up.
			if test -r "${incdir}"/GVersion.h; then
				out="$out $(sed -n 's,.*GRSI_RELEASE *\"\(.*\)\".*,\1,p' < "${incdir}"/GVersion.h)"
			else
				echo "cannot read ${incdir}/GVersion.h"
				exit 1
			fi
			;;
		--incdir)
			if test "$incdirout" = "yes" ; then
				shift
				continue
			fi
			incdirout="yes"
			out="$out $incdir "
			;;
		--cflags)
			if test "$cflagsout" = "yes" ; then
				shift
				continue
			fi
			cflagsout="yes"
			out="$out $cflags "
			;;
		--libs)
			if test "$libsout" = "yes" ; then
				shift
				continue
			fi
			libsout="yes"
			if test "$alllibsout" = "yes" ; then
				shift
				continue
			fi
			out=$"$out -L${libdir}"
			for library in $grsilibs $detlibs ; do
				if [ -e ${libdir}/lib${library}.so ] || [ -e ${libdir}/lib${library}.dylib ] ; then
					out=$"$out -l${library}"
				fi
			done
			;;
		--all-libs)
			if test "$alllibsout" = "yes" ; then
				shift
				continue
			fi
			alllibsout="yes"
			if test "$libsout" = "yes" ; then
				for library in $grsimore ; do
					if [ -e ${libdir}/lib${library}.so ] || [ -e ${libdir}/lib${library}.dylib ] ; then
						out=$"$out -l${library}"
					fi
				done
				if [ "$(root-config --has-proof)" == "yes" ] ; then
					out="$out $XMLlib -lX11 -lXpm -lProof -lGuiHtml -lMinuit -lSpectrum"
				else
					out="$out $XMLlib -lX11 -lXpm -lGuiHtml -lMinuit -lSpectrum"
				fi
			else
				out=$"$out -L${libdir}"
				for library in $grsilibs $detlibs $grsimore ; do
					if [ -e ${libdir}/lib${library}.so ] || [ -e ${libdir}/lib${library}.dylib ] ; then
						out=$"$out -l${library}"
					fi
				done
				if [ "$(root-config --has-proof)" == "yes" ] ; then
					out=$"$out $XMLlib -lX11 -lXpm -lProof -lGuiHtml -lMinuit -lSpectrum"
				else
					out=$"$out $XMLlib -lX11 -lXpm -lGuiHtml -lMinuit -lSpectrum"
				fi
			fi
			if [ "$(root-config --has-mathmore)" == "yes" ]; then
				out="$out -lMathMore"
			fi
			;;
		--*-cflags)
			lib=${1%-cflags}; # remove trailing -cflags
			lib=${lib#--};  # remove leading  --
			# check that the config script exists
			if [ -e "$GRSISYS/$lib/util/config" ] ; then
				out="$out $($GRSISYS/$lib/util/config --cflags)"
			elif [ -e "$GRSISYS/_deps/$lib-src/util/config" ] ; then
				out="$out $($GRSISYS/_deps/$lib-src/util/config --cflags)"
			fi
			;;
		--*-incdir)
			lib=${1%-incdir}; # remove trailing -incdir
			lib=${lib#--};  # remove leading  --
			# check that the config script exists
			if [ -e "$GRSISYS/$lib/util/config" ] ; then
				out="$out $($GRSISYS/$lib/util/config --incdir)"
			elif [ -e "$GRSISYS/_deps/$lib-src/util/config" ] ; then
				out="$out $($GRSISYS/_deps/$lib-src/util/config --incdir)"
			fi
			;;
		--*-libs)
			lib=${1%-libs}; # remove trailing -libs
			lib=${lib#--};  # remove leading  --
			# check that the config script exists
			if [ -e "$GRSISYS/$lib/util/config" ] ; then
				out="$out $($GRSISYS/$lib/util/config --libs)"
			elif [ -e "$GRSISYS/_deps/$lib-src/util/config" ] ; then
				out="$out $($GRSISYS/_deps/$lib-src/util/config --libs)"
			fi
			;;
		--root)
			if test "$rootout" = "yes" ; then
				shift
				continue
			fi
			rootout="yes"
			out="$out $(root-config --cflags --libs) -lPhysics -lSpectrum" 
			;;
		--help)
			### Print a helpful message...
			echo "Usage: $(basename "$0") [options]"
			echo ""
			echo "  --version       Print the current GRSI Version number."
			echo "  --incdir        Print header path."
			echo "  --cflags        Print compiler flags and header path."
			echo "  --libs          Print libdir + most used GRSI libraries."
			echo "  --all-libs      Print libdir + all GRSI libraries."
			echo "  --<det>-incdir  Print header path for detector specific libraries."
			echo "  --<det>-cflags  Print compiler flags and header path for detector specific libraries."
			echo "  --<det>-libs    Print libdir for detector specific libraries."
			echo "  --root          Print root-config output need for most grsi compulations."
			echo "  --help          Print what you see here."
			exit 0
			;;
		*)
			### Give an error
			echo "Unknown argument \"$1\"!" 1>&2
			echo "${usage}" 1>&2
			exit 1
			;;
	esac
	shift 
done

echo "$out"

